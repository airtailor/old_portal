exit
order["shopify_id"]
order
exit
order[:name]
order[;name]
order["shopify_id"]
order
exit
c
alt
c
alt
exit
alt
c
alt
exit
c
alt
c
alt
c
alt
c
alt
exit
alt
c
alt
c
alt
c
alt
c
alt
exit
alt
c
alt
exit
alt
alc
c
alt
exit
alt
c
alt
c
alt
c
alt
c
alterations
alt
exit
alt
c
alterations
alt
exit
order["type"]
order
JSON.parse(format_alterations(order))
format_alterations(order)
order["alterations"]
exit
format_alterations(order)
order["alterations"]
order
 format_alterations(order)
order["alterations"]
["alterations"]
order
exit
alt_hash
c
order_alts
c
order_alts
c
order_alts
c
order_alts
c
alt_hash
c
order_alts
c
alt_hash
c
order_alts
c
alt_hash
c
order_alts
c
alt_hash
c
order_alts
exit
order_alts
exit
order_alts
c
alt_hash
c
order_alts
exit
alt_hash
c
order_alts
c
alt_hash
c
order_alts
exit
order_alts
exit
alt_hash
c
order_alts
exit
c
order_alts
exit
alt_hash
exit
order_alts
c
order_alts
c
order_alts
exit
format_alterations(order)exit
format_alterations(order)
order["alterations"]
order
exit
order["alterations"]
order
alterations
c
alterations
c
type
alterations
exit
type
alterations = eval(alterations)
alterations
exit
alterations.length
alterations
x
x.select {|y, z| x[y].each {|b, d| d.nil?} }
x.select {|y, z| x[y].each {|b, d| !d.nil?} }
x.each {|y, z| x[y].each {|b, d| !d.nil?} }
x.each {|y, z| x[y].each {|b, d| puts d} }
x.each {|y, z| x["y"].each {|b, d| puts d} }
x.each {|y, z| y.each {|b, d| puts d} }
x.each {|y, z| y.each {|b, d| puts d} }}
x.each {|y, z| y.each {|b, d| puts d}
x.each {|y, z| puts y}
x.each do {|y, z| puts y}
x = eval(alterations)
eval(alterations)
alterations
c
alterations
exit
'exi
exit
order
exit
Customer.where(phone: "6167804457").count
@customers.select{|c| c["phone"] == "6167804457"}
@customers.select{|c| c["phone"] == phone}
@customers.select{|x| x["phone"] == phone}
Customer.all.uniq {|x| x.phone}.count
Customer.all.uniq {|x| x.phone}
Customer.all
Customer.where(phone: "6167804457").count
Customer.where(phone: "6167804457")
Customer.where(phone: x)
x = Customer.where(first_name: first_name).first.phone
Customer.where(first_name: first_name).first.phone
Customer.where(first_name: first_name).phone
Customer.where(first_name: first_name)
order["phone"]
last_name
first_name
order
exit
@customers.select{|x| x["last_name"] =="Gantous"}
@customers.select{|x| x["first_name"] =="Andres"}
@customers.select{|x| x"[first_name"]=="Andres"}
@customers.select{|x| first_name: "Andres"}
order
exit-program
@customers.select{|x| x["last_name"] == "Hall"exit}
@customers.select{|x| x["last_name"] == "Hall"}
@customers.select{|x| x["phone"] == order["phone"]}
customers
order
exit
c
no_doc.join(" ")
no_doc
exit
no_doc
split_name
exit
@customers.select{|x| x["last_name"] == "Amberths"}
order
exit
order
exit
customers
last_name
first_name
order
exit
@customers.select {|x| x["last_name"].include? "Kelly"}
@customers.select {|x| x["last_name"] == "Kelly jr"}
@customers.select {|x| x["last_name"] == "Kelly Jr"}
order
exit
customers
order
exit
no_doc
doc, *no_doc = split_name
split_name
exit
split_name
order
exit
order
last_name
first_name
exit
last_name
first_name
customers
exit
last_name
first_name
@orders.count
customers
exit
no_suffix
exit
no_suffix
exit
